/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
-------------------------------------------------------------------------------
Description
    Writes out surface files with interpolated field data in VTK format, e.g.
    cutting planes, iso-surfaces and patch boundary surfaces.
    This file includes a selection of example surfaces, each of which the user
    should configure and/or remove.
\*---------------------------------------------------------------------------*/

#includeEtc "caseDicts/postProcessing/visualization/surfaces.cfg"

fields       (p nuTilda U);

surfaces
(
    xNormal
    {
        $cuttingPlane;
    }

    xNormalUpwind
    {
        $cuttingPlane;
        pointAndNormalDict
        {
            normalVector $x;
            basePoint    (-1.5 0 0); // Overrides default basePoint (0 0 0)
        }
    }

    xNormalDownwind
    {
        $cuttingPlane;
        pointAndNormalDict
        {
            normalVector $x;
            basePoint    (1.5 0 0); // Overrides default basePoint (0 0 0)
        }
    }

    yNormal
    {
        $cuttingPlane;
        pointAndNormalDict
        {
            normalVector $y;      // Overrides default normalVector (1 0 0)
        }                         // $y: macro for (0 1 0)
    }

    yNormalMidSpan
    {
        $cuttingPlane;
        pointAndNormalDict
        {
            normalVector $y;      // Overrides default normalVector (1 0 0)
            basePoint  (0 1 0); // Overrides default basePoint (0 0 0)
        }
    }

    zNormal
    {
        $cuttingPlane;
        pointAndNormalDict
        {
            normalVector $z;      // $z: macro for (0 0 1)
        }
    }

    zNormalMidHeight
    {
        $cuttingPlane;
        pointAndNormalDict
        {
            basePoint    (0 0 0.5); // Overrides default basePoint (0 0 0)
            normalVector $z;      // $z: macro for (0 0 1)
        }
    }

);

// ************************************************************************* //
